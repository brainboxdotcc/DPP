Determining if the pthread_setname_np exist failed with the following output:
Change Dir: /home/ilesik/Desktop/DPP/cmake-build-debug/CMakeFiles/CMakeTmp

Run Build Command(s):/home/ilesik/.cache/JetBrains/RemoteDev/dist/68305831d57ea_CLion-2022.2.4/bin/ninja/linux/ninja cmTC_7c02b && [1/2] Building CXX object CMakeFiles/cmTC_7c02b.dir/CheckSymbolExists.cxx.o
[2/2] Linking CXX executable cmTC_7c02b
FAILED: cmTC_7c02b 
: && /usr/bin/c++   CMakeFiles/cmTC_7c02b.dir/CheckSymbolExists.cxx.o -o cmTC_7c02b   && :
/usr/bin/ld: CMakeFiles/cmTC_7c02b.dir/CheckSymbolExists.cxx.o: in function `main':
CheckSymbolExists.cxx:(.text+0x1f): undefined reference to `pthread_setname_np'
collect2: error: ld returned 1 exit status
ninja: build stopped: subcommand failed.


File /home/ilesik/Desktop/DPP/cmake-build-debug/CMakeFiles/CMakeTmp/CheckSymbolExists.cxx:
/* */
#include <pthread.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef pthread_setname_np
  return ((int*)(&pthread_setname_np))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Performing C++ SOURCE FILE Test CMAKE_HAVE_LIBC_PTHREAD failed with the following output:
Change Dir: /home/ilesik/Desktop/DPP/cmake-build-debug/CMakeFiles/CMakeTmp

Run Build Command(s):/home/ilesik/.cache/JetBrains/RemoteDev/dist/68305831d57ea_CLion-2022.2.4/bin/ninja/linux/ninja cmTC_f87c1 && [1/2] Building CXX object CMakeFiles/cmTC_f87c1.dir/src.cxx.o
[2/2] Linking CXX executable cmTC_f87c1
FAILED: cmTC_f87c1 
: && /usr/bin/c++   CMakeFiles/cmTC_f87c1.dir/src.cxx.o -o cmTC_f87c1   && :
/usr/bin/ld: CMakeFiles/cmTC_f87c1.dir/src.cxx.o: in function `main':
src.cxx:(.text+0x46): undefined reference to `pthread_create'
/usr/bin/ld: src.cxx:(.text+0x52): undefined reference to `pthread_detach'
/usr/bin/ld: src.cxx:(.text+0x5e): undefined reference to `pthread_cancel'
/usr/bin/ld: src.cxx:(.text+0x6f): undefined reference to `pthread_join'
collect2: error: ld returned 1 exit status
ninja: build stopped: subcommand failed.


Source file was:
#include <pthread.h>

static void* test_func(void* data)
{
  return data;
}

int main(void)
{
  pthread_t thread;
  pthread_create(&thread, NULL, test_func, NULL);
  pthread_detach(thread);
  pthread_cancel(thread);
  pthread_join(thread, NULL);
  pthread_atfork(NULL, NULL, NULL);
  pthread_exit(NULL);

  return 0;
}

